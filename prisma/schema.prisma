datasource db {
    provider  = "mongodb"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Boards    Boards[]
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String
    expires    DateTime

    @@unique([identifier, token])
}

model Boards {
    id          String     @id @default(auto()) @map("_id") @db.ObjectId
    userId      String     @db.ObjectId
    user        User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
    icon        String     @default("üìù") @db.String
    title       String     @default("Untitled") @db.String
    description String     @default("Add description here\nüü¢ You can add multiline description\nüü¢ Let's start...")
    position    Int
    Sections    Sections[]
}

model Sections {
    id      String  @id @default(auto()) @map("_id") @db.ObjectId
    title   String  @default("")
    boardId String  @db.ObjectId
    board   Boards? @relation(fields: [boardId], references: [id], onDelete: Cascade)
    Tasks   Tasks[]
}

model Tasks {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    sectionId String    @db.ObjectId
    section   Sections? @relation(fields: [sectionId], references: [id], onDelete: Cascade)
    title     String?   @default("") @db.String
    content   String?   @default("") @db.String
    position  Int
    createdAt DateTime  @default(now())
}
